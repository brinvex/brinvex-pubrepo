<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.brinvex</groupId>
    <artifactId>brinvex-persistence</artifactId>
    <version>1.0.1</version>

    <name>brinvex-persistence</name>
    <description>
        Brinvex Persistence is a Java micro-library built on top of JPA/Hibernate,
        designed to simplify the implementation of data access layer components
        while remaining straightforward and focused on PostgreSQL and Microsoft SQL Server.
    </description>
    <url>https://github.com/brinvex/brinvex-persistence</url>
    <inceptionYear>2023</inceptionYear>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>dev1@brinvex.com</name>
            <email>dev1@brinvex.com</email>
            <organization>Brinvex</organization>
            <organizationUrl>https://brinvex.com</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:https://github.com:brinvex/brinvex-persistence.git</connection>
        <developerConnection>scm:git:https://github.com/brinvex/brinvex-persistence.git</developerConnection>
        <url>scm:git:https://github.com/brinvex/brinvex-persistence/tree/master</url>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <!-- Presented in README -->
        <java.version>17</java.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <github-site-maven-plugin.version>0.11</github-site-maven-plugin.version>
        <github.global.server>github-pubrepo-brinvex</github.global.server>

        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.showWarnings>true</maven.compiler.showWarnings>
        <maven.compiler.showDeprecation>true</maven.compiler.showDeprecation>
        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <maven-source-plugin.version>3.3.1</maven-source-plugin.version>

        <jakarta.persistence-api.version>3.1.0</jakarta.persistence-api.version>
        <jakarta.annotation-api.version>2.1.1</jakarta.annotation-api.version>

        <slf4j.version>2.0.16</slf4j.version>
        <logback-classic.version>1.5.12</logback-classic.version>

        <junit-jupiter.version>5.11.3</junit-jupiter.version>
        <!-- Presented in README -->
        <hibernate.version.version>6.6.29.Final</hibernate.version.version>

        <!--
        The need those 2 dependencies is a consequence of JPMS automatic module of Hibernate and its dependencies:
        org.hibernate.orm.core (Automatic)
          -> jakarta.transaction-api (Implicit)
              -> jakarta.enterprise.cdi-api (required by jakarta.transaction-api)
              -> jakarta.interceptor-api (required by jakarta.transaction-api)
        -->
        <jakarta.interceptor-api.version>2.2.0</jakarta.interceptor-api.version>
        <jakarta.enterprise.cdi-api.version>3.0.1</jakarta.enterprise.cdi-api.version>

        <postgresql.version>42.7.4</postgresql.version>
    </properties>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.brinvex.util</groupId>
                <artifactId>brinvex-persistence-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.brinvex.util</groupId>
                <artifactId>brinvex-persistence-entity-api</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.annotation</groupId>
                <artifactId>jakarta.annotation-api</artifactId>
                <version>${jakarta.annotation-api.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.persistence</groupId>
                <artifactId>jakarta.persistence-api</artifactId>
                <version>${jakarta.persistence-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.orm</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.version.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.orm</groupId>
                <artifactId>hibernate-jpamodelgen</artifactId>
                <version>${hibernate.version.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.interceptor</groupId>
                <artifactId>jakarta.interceptor-api</artifactId>
                <version>${jakarta.interceptor-api.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.enterprise</groupId>
                <artifactId>jakarta.enterprise.cdi-api</artifactId>
                <version>${jakarta.enterprise.cdi-api.version}</version>
            </dependency>

            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback-classic.version}</version>
            </dependency>

            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit-jupiter.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-core</artifactId>
        </dependency>

        <dependency>
            <groupId>jakarta.interceptor</groupId>
            <artifactId>jakarta.interceptor-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <version>${jakarta.enterprise.cdi-api.version}</version>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>


    <distributionManagement>
        <repository>
            <id>temp-internal-staging-repo</id>
            <name>Temporary Internal Staging Repository</name>
            <url>file://${project.build.directory}/repo</url>
        </repository>
    </distributionManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.hibernate.orm</groupId>
                            <artifactId>hibernate-jpamodelgen</artifactId>
                            <version>${hibernate.version.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <annotationProcessors>
                        <annotationProcessor>org.hibernate.processor.HibernateProcessor</annotationProcessor>
                    </annotationProcessors>
                </configuration>
            </plugin>

            <!--
            https://www.baeldung.com/maven-repo-github
            https://stackoverflow.com/questions/14013644/hosting-a-maven-repository-on-github
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven-source-plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>${github-site-maven-plugin.version}</version>
                <configuration>
                    <!-- git commit message -->
                    <message>Maven artifacts for ${project.name} ${project.version}</message>
                    <!-- disable webpage processing -->
                    <noJekyll>true</noJekyll>
                    <!-- matches distribution management repository url above -->
                    <outputDirectory>${project.build.directory}/repo</outputDirectory>
                    <!-- remote branch name -->
                    <branch>refs/heads/main</branch>
                    <includes>
                        <include>**/*</include>
                    </includes>
                    <!-- GitHub repo name -->
                    <repositoryName>brinvex-pubrepo</repositoryName>
                    <!-- GitHub username  -->
                    <repositoryOwner>brinvex</repositoryOwner>
                    <merge>true</merge>
                </configuration>
                <executions>
                    <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
                    <execution>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


</project>